generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Issue {
  id               Int      @id @default(autoincrement())
  title            String
  description      String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  assignedToUserId String?  @map("assigned_to_user_id")
  createdByUserId  String   @map("created_by_user_id")
  status           Status   @default(OPEN)
  assignedToUser   User?    @relation("AssignedTo", fields: [assignedToUserId], references: [id])
  createdByUser    User     @relation("CreatedBy", fields: [createdByUserId], references: [id])
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  password       String?
  accounts       Account[]
  issuesAssigned Issue[]   @relation("AssignedTo")
  issuesCreated  Issue[]   @relation("CreatedBy")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}
